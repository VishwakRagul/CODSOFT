import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;

public class CurrencyConverter {

    private static Map<String, Double> exchangeRates;

    public static void main(String[] args) {
        initializeExchangeRates();
        SwingUtilities.invokeLater(CurrencyConverter::createAndShowGUI);
    }

    private static void initializeExchangeRates() {
        exchangeRates = new HashMap<>();
        exchangeRates.put("USD", 1.0); 
        exchangeRates.put("EUR", 0.85);
        exchangeRates.put("GBP", 0.75);
        exchangeRates.put("JPY", 110.0);
        exchangeRates.put("INR", 75.0);
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Currency Converter");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridLayout(5, 2, 10, 10));
        frame.setResizable(false);

        JLabel amountLabel = new JLabel("Amount:");
        JTextField amountField = new JTextField();

        JLabel fromCurrencyLabel = new JLabel("From:");
        JComboBox<String> fromCurrencyBox = new JComboBox<>(exchangeRates.keySet().toArray(new String[0]));

        JLabel toCurrencyLabel = new JLabel("To:");
        JComboBox<String> toCurrencyBox = new JComboBox<>(exchangeRates.keySet().toArray(new String[0]));

        JLabel resultLabel = new JLabel("Converted Amount:");
        JTextField resultField = new JTextField();
        resultField.setEditable(false);

        JButton convertButton = new JButton("Convert");
        convertButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    double amount = Double.parseDouble(amountField.getText());
                    String fromCurrency = (String) fromCurrencyBox.getSelectedItem();
                    String toCurrency = (String) toCurrencyBox.getSelectedItem();
                    double convertedAmount = convertCurrency(amount, fromCurrency, toCurrency);
                    resultField.setText(String.format("%.2f", convertedAmount));
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Please enter a valid amount.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        frame.add(amountLabel);
        frame.add(amountField);
        frame.add(fromCurrencyLabel);
        frame.add(fromCurrencyBox);
        frame.add(toCurrencyLabel);
        frame.add(toCurrencyBox);
        frame.add(new JLabel()); 
        frame.add(convertButton);
        frame.add(resultLabel);
        frame.add(resultField);

        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private static double convertCurrency(double amount, String fromCurrency, String toCurrency) {
        double fromRate = exchangeRates.get(fromCurrency);
        double toRate = exchangeRates.get(toCurrency);
        return amount * (toRate / fromRate);
    }
}
